name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions: 
      contents: read
      packages: write
      actions: write
    steps:
    - name: Enable debug logging
      run: echo "RUNNER_DEBUG=true" >> $GITHUB_ENV
      
    - uses: actions/checkout@v2

    - name: Convert to lowercase
      id: string
      run: |
        echo "OWNER_LOWER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT
        echo "REPO_LOWER=$(echo ${{ github.event.repository.name }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

    - name: Generate GitHub App token
      id: generate_token
      uses: tibdex/github-app-token@v1
      with:
        app_id: ${{ secrets.APP_ID }}
        private_key: ${{ secrets.APP_PRIVATE_KEY }}

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

    - name: Build and push Docker image to GitHub Container Registry
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ghcr.io/${{ steps.string.outputs.OWNER_LOWER }}/${{ steps.string.outputs.REPO_LOWER }}:${{ github.sha }}

    - name: Deploy to Docker Swarm
      env:
        HOST: ${{ secrets.HOST }}
        USERNAME: ${{ secrets.USERNAME }}
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      run: |
        echo "$SSH_PRIVATE_KEY" > private_key && chmod 600 private_key
        ssh -o StrictHostKeyChecking=no -i private_key ${USERNAME}@${HOST} << EOF
          # Forzar la actualizaciÃ³n de la imagen
          docker pull ghcr.io/${{ steps.string.outputs.OWNER_LOWER }}/${{ steps.string.outputs.REPO_LOWER }}:${{ github.sha }}
          # Verificar el estado del servicio
          docker service ps ${{ steps.string.outputs.REPO_LOWER }} --no-trunc
        EOF