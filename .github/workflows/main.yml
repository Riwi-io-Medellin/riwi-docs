name: Deploy to Docker Swarm

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions: 
      contents: read
      packages: write
      actions: write

    steps:
    - name: Enable debug logging
      run: echo "RUNNER_DEBUG=true" >> $GITHUB_ENV

    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Convert to lowercase
      id: string
      run: |
        echo "OWNER_LOWER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT
        echo "REPO_LOWER=$(echo ${{ github.event.repository.name }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

    - name: Generate GitHub App token
      id: generate_token
      uses: tibdex/github-app-token@v1
      with:
        app_id: ${{ secrets.APP_ID }}
        private_key: ${{ secrets.APP_PRIVATE_KEY }}

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: |
          ghcr.io/${{ steps.string.outputs.OWNER_LOWER }}/${{ steps.string.outputs.REPO_LOWER }}:latest
          ghcr.io/${{ steps.string.outputs.OWNER_LOWER }}/${{ steps.string.outputs.REPO_LOWER }}:${{ github.sha }}
        build-args: |
          REACT_APP_FIREBASE_API_KEY=${{ secrets.REACT_APP_FIREBASE_API_KEY }}
          REACT_APP_FIREBASE_AUTH_DOMAIN=${{ secrets.REACT_APP_FIREBASE_AUTH_DOMAIN }}
          REACT_APP_FIREBASE_PROJECT_ID=${{ secrets.REACT_APP_FIREBASE_PROJECT_ID }}
          REACT_APP_FIREBASE_STORAGE_BUCKET=${{ secrets.REACT_APP_FIREBASE_STORAGE_BUCKET }}
          REACT_APP_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.REACT_APP_FIREBASE_MESSAGING_SENDER_ID }}
          REACT_APP_FIREBASE_APP_ID=${{ secrets.REACT_APP_FIREBASE_APP_ID }}
          REACT_APP_FIREBASE_MEASUREMENT_ID=${{ secrets.REACT_APP_FIREBASE_MEASUREMENT_ID }}

    - name: Deploy to VPS using SSH
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          # Cambiar al directorio de la aplicación en el servidor
          cd /var/www/${{ steps.string.outputs.REPO_LOWER }}

          # Detener el contenedor que utiliza la imagen `latest`
          docker-compose down
          
          # Eliminar la imagen `latest` existente para forzar la descarga de la nueva
          docker rmi ghcr.io/${{ steps.string.outputs.OWNER_LOWER }}/${{ steps.string.outputs.REPO_LOWER }}:latest || true
          
          # Descargar la nueva imagen utilizando el SHA del commit
          docker pull ghcr.io/${{ steps.string.outputs.OWNER_LOWER }}/${{ steps.string.outputs.REPO_LOWER }}:${{ github.sha }}
          
          # Recrear los contenedores con la nueva imagen
          docker-compose up -d --force-recreate
          
          # Limpiar imágenes antiguas no utilizadas
          docker image prune -a -f
